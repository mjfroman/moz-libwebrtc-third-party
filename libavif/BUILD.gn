# Copyright 2020 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//media/media_options.gni")

source_set("libavif") {
  public = [
    "src/include/avif/avif.h",
  ]

  sources = [
    "src/include/avif/internal.h",
    "src/src/alpha.c",
    "src/src/avif.c",
    "src/src/colr.c",
    "src/src/diag.c",
    "src/src/io.c",
    "src/src/mem.c",
    "src/src/obu.c",
    "src/src/rawdata.c",
    "src/src/read.c",
    "src/src/reformat.c",
    "src/src/reformat_libsharpyuv.c",
    "src/src/reformat_libyuv.c",
    "src/src/scale.c",
    "src/src/stream.c",
    "src/src/utils.c",
  ]

  # configs -= [ "//build/config/compiler:chromium_code" ]
  # configs += [ "//build/config/compiler:no_chromium_code" ]

  # CFI builds have an issue when C code tries to access, via a function
  # pointer, a C++ function that contains a "struct YuvConstants *" parameter.
  # Work around that issue by adding "-fsanitize-cfi-icall-generalize-pointers"
  # until the CFI issue is fixed.
  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
  include_dirs = [ "src/include/" ]
  defines = [ "AVIF_LIBYUV_ENABLED" ]

  deps = [ "//third_party/libyuv" ]

  if (enable_dav1d_decoder) {
    sources += [ "src/src/codec_dav1d.c" ]
    include_dirs += [ "../dav1d/libdav1d/include/" ]
    defines += [ "AVIF_CODEC_DAV1D" ]
    deps += [ "//third_party/dav1d" ]
  }
}
