diff --git a/src/main/java/com/android/tools/r8/R8Command.java b/src/main/java/com/android/tools/r8/R8Command.java
index 8c63d06f5..aee9ba39b 100644
--- a/src/main/java/com/android/tools/r8/R8Command.java
+++ b/src/main/java/com/android/tools/r8/R8Command.java
@@ -3,6 +3,7 @@
 // BSD-style license that can be found in the LICENSE file.
 package com.android.tools.r8;
 
+import com.android.tools.r8.DexIndexedConsumer.DirectoryConsumer;
 import com.android.tools.r8.ProgramResource.Kind;
 import com.android.tools.r8.errors.DexFileOverflowDiagnostic;
 import com.android.tools.r8.experimental.graphinfo.GraphConsumer;
@@ -268,6 +269,15 @@ public final class R8Command extends BaseCompilerCommand {
       return self();
     }
 
+    public Builder addFeatureJar(Path inputJarPath, Path outputPath) {
+      addFeatureSplit(splitBuilder ->
+          splitBuilder
+            .addProgramResourceProvider(ArchiveProgramResourceProvider.fromArchive(inputJarPath))
+            .setProgramConsumer(new DirectoryConsumer(outputPath))
+            .build());
+      return self();
+    }
+
     /**
      * Set a consumer for receiving the proguard seeds information.
      *
diff --git a/src/main/java/com/android/tools/r8/R8CommandParser.java b/src/main/java/com/android/tools/r8/R8CommandParser.java
index fd4f570ea..66a2e9506 100644
--- a/src/main/java/com/android/tools/r8/R8CommandParser.java
+++ b/src/main/java/com/android/tools/r8/R8CommandParser.java
@@ -25,7 +25,8 @@ public class R8CommandParser extends BaseCompilerCommandParser {
           "--main-dex-list",
           "--main-dex-list-output",
           "--pg-conf",
-          "--pg-map-output");
+          "--pg-map-output",
+          "--feature-jar");
 
   public static void main(String[] args) throws CompilationFailedException {
     R8Command command = parse(args, Origin.root()).build();
@@ -74,8 +75,11 @@ public class R8CommandParser extends BaseCompilerCommandParser {
               "  --main-dex-list <file>   # List of classes to place in the primary dex file.",
               "  --main-dex-list-output <file>  ",
               "                           # Output the full main-dex list in <file>.",
+              "  --feature-jar <file>:<file>  ",
+              "                           # Feature jar <input-file>:<output-dir> files.",
               "  --version                # Print the version of r8.",
               "  --help                   # Print this message."));
+
   /**
    * Parse the R8 command-line.
    *
@@ -208,6 +212,11 @@ public class R8CommandParser extends BaseCompilerCommandParser {
         builder.setProguardMapOutputPath(Paths.get(nextArg));
       } else if (arg.equals("--no-data-resources")) {
         state.includeDataResources = false;
+      } else if (arg.equals("--feature-jar")) {
+        String[] argParts = nextArg.split(":");
+        String featureJarInputPath = argParts[0];
+        String featureJarOutputPath = argParts[1];
+        builder.addFeatureJar(Paths.get(featureJarInputPath), Paths.get(featureJarOutputPath));
       } else {
         if (arg.startsWith("--")) {
           builder.error(new StringDiagnostic("Unknown option: " + arg, argsOrigin));
diff --git a/src/main/java/com/android/tools/r8/utils/InternalOptions.java b/src/main/java/com/android/tools/r8/utils/InternalOptions.java
index 595ac28da..e96f06364 100644
--- a/src/main/java/com/android/tools/r8/utils/InternalOptions.java
+++ b/src/main/java/com/android/tools/r8/utils/InternalOptions.java
@@ -194,8 +194,8 @@ public class InternalOptions {
   public boolean enableDynamicTypeOptimization = true;
   public boolean enableFieldBitAccessAnalysis =
       System.getProperty("com.android.tools.r8.fieldBitAccessAnalysis") != null;
-  public boolean enableHorizontalClassMerging = true;
-  public boolean enableVerticalClassMerging = true;
+  public boolean enableHorizontalClassMerging = false;
+  public boolean enableVerticalClassMerging = false;
   public boolean enableArgumentRemoval = true;
   public boolean enableUnusedArgumentRemoval = true;
   public boolean enableUnusedInterfaceRemoval = true;
@@ -919,7 +919,7 @@ public class InternalOptions {
     public static final String CLASS_NAME = "com.android.tools.r8.GeneratedOutlineSupport";
     public static final String METHOD_PREFIX = "outline";
 
-    public boolean enabled = true;
+    public boolean enabled = System.getProperty("com.android.tools.r8.disableOutlining") == null;
     public int minSize = 3;
     public int maxSize = 99;
     public int threshold = 20;
