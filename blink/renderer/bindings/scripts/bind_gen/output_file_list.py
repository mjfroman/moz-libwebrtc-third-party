# Copyright 2020 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import web_idl

from .code_node import EmptyNode
from .code_node import ListNode
from .code_node import TextNode
from .codegen_accumulator import CodeGenAccumulator
from .codegen_utils import make_copyright_header
from .codegen_utils import write_code_node_to_file
from .mako_renderer import MakoRenderer
from .path_manager import PathManager

_COMPONENT_CORE = web_idl.Component("core")
_COMPONENT_MODULES = web_idl.Component("modules")


class _FileList(object):
    def __init__(self):
        self._filelist = {
            _COMPONENT_CORE: [],
            _COMPONENT_MODULES: [],
        }

    def add(self, component, filepath):
        assert isinstance(component, web_idl.Component)
        assert isinstance(filepath, str)
        self._filelist[component].append(filepath)

    def filepaths(self, component):
        assert isinstance(component, web_idl.Component)
        return iter(sorted(self._filelist[component]))


def make_file_list_in_gni(gni_var_name, component, file_list):
    assert isinstance(gni_var_name, str)
    assert isinstance(component, web_idl.Component)
    assert isinstance(file_list, _FileList)

    filepaths = map(
        lambda filepath: TextNode("\"$root_gen_dir/{}\"".format(filepath)),
        file_list.filepaths(component))

    return ListNode([
        TextNode("{} = [".format(gni_var_name)),
        ListNode(filepaths, separator=",\n", tail=","),
        TextNode("]"),
    ])


def update_generated_bindings_gni(web_idl_database):
    enumeration_files = _FileList()
    files = enumeration_files
    for enumeration in web_idl_database.enumerations:
        path_manager = PathManager(enumeration)
        files.add(path_manager.api_component, path_manager.api_path(ext="h"))
        files.add(path_manager.api_component, path_manager.api_path(ext="cc"))

    def name(kind, component):
        return "generated_{kind}_sources_in_{component}".format(
            kind=kind, component=component)

    for component in (_COMPONENT_CORE, _COMPONENT_MODULES):
        gni_path = PathManager.src_path_to(
            "third_party/blink/renderer/bindings/{}/v8/generated_bindings.gni".
            format(component))
        gni_node = ListNode(tail="\n")
        gni_node.set_accumulator(CodeGenAccumulator())
        gni_node.set_renderer(MakoRenderer())

        gni_node.append(
            TextNode("""\
# Copyright 2020 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This file is automatically generated.  DO NOT EDIT.

"""))

        gni_node.append(
            make_file_list_in_gni(
                name("enumeration", component), component, enumeration_files))
        gni_node.append(EmptyNode())

        write_code_node_to_file(gni_node, gni_path)
