// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// https://github.com/WICG/web-codecs

[
    Exposed=(Window,DedicatedWorker),
    Serializable,
    RuntimeEnabled=WebCodecs
] interface VideoFrame {
  [CallWith=ScriptState, RaisesException]
  constructor(CanvasImageSource source, optional VideoFrameInit init = {});
  [CallWith=ScriptState, RaisesException]
  constructor(VideoPixelFormat format,
              sequence<PlaneInit> planes,
              VideoFramePlaneInit init);

  // TODO(sandersd): It's not clear whether it's better to use undefined, or a
  // special enum value to mean 'opaque format'. Undefined does result in
  // shorter branch conditions.
  readonly attribute VideoPixelFormat? format;
  readonly attribute FrozenArray<Plane>? planes;

  // Presentation timestamp, in microseconds.
  readonly attribute unsigned long long? timestamp;
  // Presentation duration, in microseconds.
  readonly attribute unsigned long long? duration;

  // Dimensions of this frame's pixel data; typically padded to a macroblock
  // multiple.
  readonly attribute unsigned long codedWidth;
  readonly attribute unsigned long codedHeight;

  // Convenience accessor, origin is always (0, 0).
  readonly attribute VideoRegion codedRegion;

  // Region of this frame's pixel data that is not padding.
  readonly attribute VideoRegion visibleRegion;

  // Display aspect ratio of visible region.
  readonly attribute unsigned long displayWidth;
  readonly attribute unsigned long displayHeight;

  // Creates of the copy of this VideoFrame, which needs to be independently
  // destroyed.
  [RaisesException] VideoFrame clone();

  void close();

  // DEPRECATED: Use visibleRegion.
  [CallWith=ExecutionContext] readonly attribute unsigned long cropLeft;
  [CallWith=ExecutionContext] readonly attribute unsigned long cropTop;
  [CallWith=ExecutionContext] readonly attribute unsigned long cropWidth;
  [CallWith=ExecutionContext] readonly attribute unsigned long cropHeight;

  // DEPRECATED: Use Window.createImageBitmap().
  [CallWith=ScriptState, RaisesException] Promise<ImageBitmap>
  createImageBitmap(optional ImageBitmapOptions options = {});

  // DEPRECATED: Use close().
  [CallWith=ExecutionContext] void destroy();
};
