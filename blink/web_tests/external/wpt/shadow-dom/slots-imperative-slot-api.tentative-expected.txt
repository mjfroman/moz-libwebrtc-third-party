This is a testharness.js-based test.
FAIL attachShadow can take slotAssignment parameter. assert_throws_js: others should throw exception function "() => {
    tTree.host3.attachShadow({ mode: 'open', slotAssignment: 'exceptional' })}" did not throw
FAIL Imperative slot API throws exception when not slotAssignment != 'manual'. assert_throws_dom: function "() => { tTree.s1.assign([]); }" did not throw
FAIL Imperative slot API throws exception when slotable parentNode != slot's host. assert_throws_dom: function "() => { tTree.s2.assign([tTree.c1]); }" did not throw
FAIL Imperative slot API can assign nodes in manual slot assignment. assert_equals: expected null but got Element node <slot id="s1"></slot>
FAIL Order of slotables is preserved in manual slot assignment. assert_array_equals: lengths differ, expected array [Element node <div id="c2"></div>, Element node <div id="c3"></div>, Element node <div id="c1"></div>] length 3, got [Text node "
FAIL Previously assigned slotable is moved to new slot when it's reassigned. assert_array_equals: lengths differ, expected array [Element node <div id="c2"></div>, Element node <div id="c3"></div>, Element node <div id="c1"></div>] length 3, got [Text node "
FAIL Assigning invalid nodes causes exception and slot returns to its previous state. assert_equals: expected "NotAllowedError" but got "Error"
FAIL Moving a slot to a new host, the slot looses its previously assigned slotables. assert_array_equals: lengths differ, expected array [Element node <div id="c1"></div>, Element node <div id="c2"></div>, Element node <div id="c3"></div>] length 3, got [Text node "
FAIL Moving a slot's tree order position within a shadow host has no impact on its assigned slotables. assert_array_equals: lengths differ, expected array [Element node <div id="c1"></div>, Element node <div id="c2"></div>, Element node <div id="c3"></div>] length 3, got [Text node "
FAIL Appending slotable to different host, it looses slot assignment. It can be re-assigned within a new host. assert_array_equals: lengths differ, expected array [Element node <div id="c1"></div>, Element node <div id="c2"></div>, Element node <div id="c3"></div>] length 3, got [Text node "
FAIL Assignment with the same node in parameters should be ignored, last one wins. assert_array_equals: lengths differ, expected array [Element node <div id="c1"></div>] length 1, got [Text node "
FAIL Removing a slot from DOM resets its slotable's slot assignment. assert_equals: expected null but got Element node <slot id="s2"></slot>
Harness: the test ran to completion.

