This is a testharness.js-based test.
PASS Snaps to the snap position if the snap area doesn't cover the snapport on x.
PASS Snaps to the snap position if the snap area covers the snapport on x on the right border.
PASS Snaps to the snap position if the snap area covers the snapport on x on the left border.
PASS Snaps to a snap area (400) that is closer than the position that reveals the space between snap areas (600) within the larger snap area on x.
PASS Snaps to a snap area (400) that is closer than the position that reveals the space between snap areas (600) within the larger snap area on y.
PASS Snap within a snap area which covers snapport on x selects a valid snap position that avoids the overlapping areas at 800-1000 and 1400-1600.
PASS Snap within a snap area which covers snapport on y selects a valid snap position that avoids the overlapping areas at 800-1000 and 1400-1600.
PASS Snap to current scroll position which is a valid snap position, as the snap area covers snapport on x and there is no intruding snap area.
PASS Snap to current scroll position which is a valid snap position, as the snap area covers snapport on y and there is no intruding snap area.
FAIL Don't snap back even if scrollTo tries to scroll to positions which are outside of the scroll range and if a snap target element covers the snaport assert_equals: expected 3715 but got 2200
PASS Snap to current scroll position on x as the area is covering x axis.However, we snap to the specified snap position on y as the area is not covering y axis.
PASS snap to current scroll position on y as the area is covering y axis, even though that area is not the only scroll area at the same position.
PASS snap to current scroll position on x as the area is covering x axis, even though that area is not the only scroll area at the same position.
Harness: the test ran to completion.

