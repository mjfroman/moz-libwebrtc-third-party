This is a testharness.js-based test.
FAIL 'round(1.1,1)' as a specified value should serialize as 'calc(1)'. assert_not_equals: 'round(1.1,1)' should be valid in opacity. got disallowed value ""
FAIL 'scale(round(1.1,1))' as a specified value should serialize as 'scale(calc(1))'. assert_not_equals: 'scale(round(1.1,1))' should be valid in transform. got disallowed value ""
PASS 'round(1.1,1)' as a computed value should serialize as '1'.
FAIL 'scale(round(1.1,1))' as a computed value should serialize as 'matrix(1, 0, 0, 1, 0, 0)'. assert_equals: 'scale(round(1.1,1))' and 'matrix(1, 0, 0, 1, 0, 0)' should serialize the same in computed values. expected "matrix(1, 0, 0, 1, 0, 0)" but got "none"
FAIL 'mod(1,1)' as a specified value should serialize as 'calc(0)'. assert_not_equals: 'mod(1,1)' should be valid in opacity. got disallowed value ""
FAIL 'scale(mod(1,1))' as a specified value should serialize as 'scale(calc(0))'. assert_not_equals: 'scale(mod(1,1))' should be valid in transform. got disallowed value ""
FAIL 'mod(1,1)' as a computed value should serialize as '0'. assert_equals: 'mod(1,1)' and '0' should serialize the same in computed values. expected "0" but got "1"
FAIL 'scale(mod(1,1))' as a computed value should serialize as 'matrix(0, 0, 0, 0, 0, 0)'. assert_equals: 'scale(mod(1,1))' and 'matrix(0, 0, 0, 0, 0, 0)' should serialize the same in computed values. expected "matrix(0, 0, 0, 0, 0, 0)" but got "none"
FAIL 'rem(1,1)' as a specified value should serialize as 'calc(0)'. assert_not_equals: 'rem(1,1)' should be valid in opacity. got disallowed value ""
FAIL 'scale(rem(1,1))' as a specified value should serialize as 'scale(calc(0))'. assert_not_equals: 'scale(rem(1,1))' should be valid in transform. got disallowed value ""
FAIL 'rem(1,1)' as a computed value should serialize as '0'. assert_equals: 'rem(1,1)' and '0' should serialize the same in computed values. expected "0" but got "1"
FAIL 'scale(rem(1,1))' as a computed value should serialize as 'matrix(0, 0, 0, 0, 0, 0)'. assert_equals: 'scale(rem(1,1))' and 'matrix(0, 0, 0, 0, 0, 0)' should serialize the same in computed values. expected "matrix(0, 0, 0, 0, 0, 0)" but got "none"
Harness: the test ran to completion.

