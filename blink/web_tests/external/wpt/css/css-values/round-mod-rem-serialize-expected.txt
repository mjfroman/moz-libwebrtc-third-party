This is a testharness.js-based test.
PASS 'round(1.1,1)' as a specified value should serialize as 'calc(1)'.
PASS 'scale(round(1.1,1))' as a specified value should serialize as 'scale(calc(1))'.
PASS 'round(1.1,1)' as a computed value should serialize as '1'.
PASS 'scale(round(1.1,1))' as a computed value should serialize as 'matrix(1, 0, 0, 1, 0, 0)'.
PASS 'mod(1,1)' as a specified value should serialize as 'calc(0)'.
PASS 'scale(mod(1,1))' as a specified value should serialize as 'scale(calc(0))'.
PASS 'mod(1,1)' as a computed value should serialize as '0'.
PASS 'scale(mod(1,1))' as a computed value should serialize as 'matrix(0, 0, 0, 0, 0, 0)'.
PASS 'rem(1,1)' as a specified value should serialize as 'calc(0)'.
PASS 'scale(rem(1,1))' as a specified value should serialize as 'scale(calc(0))'.
PASS 'rem(1,1)' as a computed value should serialize as '0'.
PASS 'scale(rem(1,1))' as a computed value should serialize as 'matrix(0, 0, 0, 0, 0, 0)'.
PASS 'calc(round(1,0))' as a specified value should serialize as 'calc(NaN)'.
PASS 'scale(calc(round(1,0)))' as a specified value should serialize as 'scale(calc(NaN))'.
FAIL 'calc(round(1,0))' as a computed value should serialize as '0'. assert_equals: 'calc(round(1,0))' and '0' should serialize the same in computed values. expected "0" but got "1"
FAIL 'scale(calc(round(1,0)))' as a computed value should serialize as 'matrix(0, 0, 0, 0, 0, 0)'. assert_equals: 'scale(calc(round(1,0)))' and 'matrix(0, 0, 0, 0, 0, 0)' should serialize the same in computed values. expected "matrix(0, 0, 0, 0, 0, 0)" but got "matrix(infinity, 0, 0, infinity, 0, 0)"
PASS 'calc(mod(1,0))' as a specified value should serialize as 'calc(NaN)'.
PASS 'scale(calc(mod(1,0)))' as a specified value should serialize as 'scale(calc(NaN))'.
FAIL 'calc(mod(1,0))' as a computed value should serialize as '0'. assert_equals: 'calc(mod(1,0))' and '0' should serialize the same in computed values. expected "0" but got "1"
FAIL 'scale(calc(mod(1,0)))' as a computed value should serialize as 'matrix(0, 0, 0, 0, 0, 0)'. assert_equals: 'scale(calc(mod(1,0)))' and 'matrix(0, 0, 0, 0, 0, 0)' should serialize the same in computed values. expected "matrix(0, 0, 0, 0, 0, 0)" but got "matrix(infinity, 0, 0, infinity, 0, 0)"
PASS 'calc(rem(1,0))' as a specified value should serialize as 'calc(NaN)'.
PASS 'scale(calc(rem(1,0)))' as a specified value should serialize as 'scale(calc(NaN))'.
FAIL 'calc(rem(1,0))' as a computed value should serialize as '0'. assert_equals: 'calc(rem(1,0))' and '0' should serialize the same in computed values. expected "0" but got "1"
FAIL 'scale(calc(rem(1,0)))' as a computed value should serialize as 'matrix(0, 0, 0, 0, 0, 0)'. assert_equals: 'scale(calc(rem(1,0)))' and 'matrix(0, 0, 0, 0, 0, 0)' should serialize the same in computed values. expected "matrix(0, 0, 0, 0, 0, 0)" but got "matrix(infinity, 0, 0, infinity, 0, 0)"
Harness: the test ran to completion.

